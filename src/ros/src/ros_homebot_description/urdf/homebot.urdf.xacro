<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="homebot">
    <xacro:include filename="$(find ros_homebot_description)/urdf/materials.urdf.xacro" />
    <!-- dimensions in meters -->
    <xacro:property name="torso_radius" value="0.075" /><!-- 150 mm diameter = 75 mm radius -->
    <xacro:property name="torso_height" value="0.16" /><!-- 160 mm height -->
    <xacro:property name="neck_height" value="0.015" />
    <xacro:property name="camera_radius" value="0.008" />
    <xacro:property name="camera_thickness" value="0.005" />
    <xacro:property name="M_PI" value="3.141592653589793" />
    
    <link name="base_footprint">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
        <inertial>
            <mass value="0.0001" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" />
        </inertial>
    </link>
    
    <link name="base_link">
        <visual>
            <geometry>
                <cylinder length="${torso_height}" radius="${torso_radius}" />
            </geometry>
            <origin xyz="0 0 ${torso_height/2}" rpy="0 0 0" />
            <material name="red" />
        </visual>
    </link>
    
    <link name="neck">
        <visual>
            <geometry>
                <cylinder length="${neck_height}" radius="${torso_radius}" />
            </geometry>
            <origin xyz="0 0 ${neck_height/2}" rpy="0 0 0" />
            <material name="green" />
        </visual>
    </link>
    
    <link name="head">
        <visual>
            <geometry>
                <sphere radius="${torso_radius}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="blue" />
        </visual>
    </link>
    
    <link name="camera">
        <visual>
            <geometry>
                <cylinder length="${camera_thickness}" radius="${camera_radius}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 90 0" />
            <material name="black" />
        </visual>
    </link>
    
    <joint name="footprint_to_base_link_joint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>
    
    <joint name="base_link_to_neck_joint" type="continuous">
        <parent link="base_link" />
        <child link="neck" />
        <origin xyz="0 0 ${torso_height+neck_height}" rpy="0 ${M_PI} 0" />
        <axis xyz="0 0 1" />
    </joint>
    
    <joint name="neck_to_head_joint" type="revolute">
        <parent link="neck" />
        <child link="head" />
        <origin xyz="0 0 ${-(torso_radius)}" rpy="${M_PI/2} 0 ${M_PI}" />
        <axis xyz="1 0 0" />
        <!-- Should match TILT_MIN/TILT_MAX in ros_homebot_python/constants.py -->
        <limit lower="${(90-65)*M_PI/180}" upper="${(90+65)*M_PI/180}" effort="50" velocity="1"/>
    </joint>
    
    <joint name="head_to_camera_joint" type="fixed">
        <parent link="head" />
        <child link="camera" />
        <origin xyz="0 ${torso_radius} 0" rpy="0 0 0" />
    </joint>
    
    <!--
    <gazebo reference="base_footprint">
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <gazebo reference="base_link">
        <material>Gazebo/Red</material>
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/homebot</robotNamespace>
        </plugin>
    </gazebo>
    -->
</robot>